build_image:
  # image: docker:git
  # We've built our own base image which includes docker-compose, node and npm
  image: atlassian/default-image:2
  cache:  # see https://docs.gitlab.com/ee/ci/caching/
    key: ${CI_COMMIT_REF_SLUG} 
    paths:
    - node_modules/
  services:
  - docker:dind
  script:
    # Build prerequisites - TODO, move into custom base image?
    - apt-get update
    - apt-get -y install jq
    - npm install -g gulp

    # Generate a .npmrc file configured for installing private modules:
    # NPM_REGISTRY_URL: the full URL of your private registry
    #                   defaults to registry.npmjs.org.
    # NPM_TOKEN: secret token for installing private modules. This
    #            this token can be found in your .npmrc, after logging in.
    - echo //$NPM_REGISTRY_URL/:_authToken=$NPM_TOKEN > ~/.npmrc
    # confirm the file generated okay
    - cat  ~/.npmrc

    # Install, build and test
    - npm install
    - cd src
    - npm install
    - cd ..
    - npm run build
    - npm run test
    
    # Update the version in package.json
    - gulp autoversion
    - git init # Why is this necessary?

    - git remote set-url origin https://sirockin:${GITLAB_CI_PUSH}@gitlab.com/flow-systems/npm-packages/pi-sense-hat.git
    - git config --global user.email 'info@flow-systems.com'
    - git config --global user.name 'Gitlab CI Runner'          

    # Push package.json and version tag
    - git add package.json
    - git commit -m "Gitlab automatically updated version [skip CI]" # [skip CI] stops infinite recursion of this script!
    - git push
    - declare -x PACKAGE_VERSION=$(jq -r '.version' package.json)        
    - echo $PACKAGE_VERSION
    - git tag $PACKAGE_VERSION
    - git remote -v
    - git push origin --tags

    # Publish the updated package
    - npm publish  
  only:
    - master